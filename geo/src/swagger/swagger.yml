openapi: 3.0.0
info:
  title: Geo API
  version: 1.0.0
  description: API documentation for the Geo microservice

paths:
  /coordinatesUser:
    get:
      summary: Get all coordinatesUser relations
      tags:
        - CoordinatesUser
      responses:
        '200':
          description: A list of coordinatesUser relations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoordinatesUser'
    post:
      summary: Create a new coordinatesUser relation
      tags:
        - CoordinatesUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoordinatesUserInput'
      responses:
        '201':
          description: coordinatesUser relation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoordinatesUser'
        '400':
          description: Invalid input
  /coordinatesUser/{id}:
    get:
      summary: Get coordinatesUser relation by ID
      tags:
        - CoordinatesUser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: coordinatesUser relation found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoordinatesUser'
        '404':
          description: Not found
    put:
      summary: Update coordinatesUser relation by ID
      tags:
        - CoordinatesUser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoordinatesUserInput'
      responses:
        '200':
          description: coordinatesUser relation updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoordinatesUser'
        '400':
          description: Invalid input
        '404':
          description: Not found
    delete:
      summary: Delete coordinatesUser relation by ID
      tags:
        - CoordinatesUser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '404':
          description: Not found
  /coordinatesUser/user/{id}:
    get:
      summary: Get all coordinatesUser relations by user ID
      tags:
        - CoordinatesUser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of relations for user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoordinatesUser'
        '404':
          description: Not found
  /coordinatesUser/coordinate/{coordinate_id}:
    get:
      summary: Get all coordinatesUser relations by coordinate ID
      tags:
        - CoordinatesUser
      parameters:
        - in: path
          name: coordinate_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of relations for coordinate
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoordinatesUser'
        '404':
          description: Not found
  /coordinatesUser/user/{idUser}/coordinate/{idCoordinate}:
    delete:
      summary: Delete coordinatesUser relation by user and coordinate ID
      tags:
        - CoordinatesUser
      parameters:
        - in: path
          name: idUser
          required: true
          schema:
            type: string
        - in: path
          name: idCoordinate
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '404':
          description: Not found
  /coordinates:
    get:
      summary: Get all coordinates
      tags:
        - Coordinates
      responses:
        '200':
          description: A list of coordinates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coordinate'
    post:
      summary: Create a new coordinate
      tags:
        - Coordinates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoordinateInput'
      responses:
        '201':
          description: Coordinate created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordinate'
        '400':
          description: Invalid input
  /coordinates/{id}:
    get:
      summary: Get coordinate by ID
      tags:
        - Coordinates
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Coordinate found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordinate'
        '404':
          description: Not found
    put:
      summary: Update coordinate by ID
      tags:
        - Coordinates
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoordinateInput'
      responses:
        '200':
          description: Coordinate updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordinate'
        '400':
          description: Invalid input
        '404':
          description: Not found
    delete:
      summary: Delete coordinate by ID
      tags:
        - Coordinates
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '404':
          description: Not found

components:
  schemas:
    CoordinatesUser:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        coordinate_id:
          type: string
        date:
          type: string
          format: date-time
    CoordinatesUserInput:
      type: object
      properties:
        user_id:
          type: string
        coordinate_id:
          type: string
      required:
        - user_id
        - coordinate_id
    Coordinate:
      type: object
      properties:
        id:
          type: string
        street:
          type: string
        cityId:
          type: string
        postal_code:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CoordinateInput:
      type: object
      properties:
        street:
          type: string
        cityId:
          type: string
        postal_code:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        user_id:
          type: string
      required:
        - cityId
        - latitude
        - longitude
        - user_id
